import { ethereum } from '@graphprotocol/graph-ts';
import { Block, BlockTime } from '../../generated/schema';

export function handleBlock(block: ethereum.Block): void {
  // The id for timeseries is autogenerated; even if we set it to a real
  // value, it would be silently overwritten
  let blockEntity = new Block('auto');
  let number = block.number.toI32();
  blockEntity.hash = block.hash;
  blockEntity.number = number;
  blockEntity.group1 = number % 10;
  blockEntity.group2 = number % 100;
  blockEntity.group3 = number % 1000;
  blockEntity.timestamp = block.timestamp.toI32();
  blockEntity.parentHash = block.parentHash;
  blockEntity.author = block.author;
  blockEntity.difficulty = block.difficulty;
  blockEntity.totalDifficulty = block.totalDifficulty;
  blockEntity.gasUsed = block.gasUsed;
  blockEntity.gasLimit = block.gasLimit;
  blockEntity.receiptsRoot = block.receiptsRoot;
  blockEntity.transactionsRoot = block.transactionsRoot;
  blockEntity.stateRoot = block.stateRoot;
  blockEntity.size = block.size;
  blockEntity.unclesHash = block.unclesHash;
  blockEntity.save();

  let blockHeader = new BlockTime('auto');
  blockHeader.hash = block.hash;
  blockHeader.number = blockEntity.number;
  blockHeader.timestamp = blockEntity.timestamp;
  blockHeader.save();
}
