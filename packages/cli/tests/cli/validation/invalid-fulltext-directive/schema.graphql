type _Schema_
@fulltext(
  name: BadValuesProvided
  language: english
  algorithm: ranked
  include: [
    {
      entity: "Musician",
      fields: [
        { name: "9" },
        { name: "bio" },
      ]
    }
  ]
)
@fulltext(
  name: "InvalidField"
  language: english
  algorithm: rank
  include: [
    {
      entity: "Musician",
      fields: [
        { name:  "9" },
        "bio"
      ]
    }
  ]
)
@fulltext(
  name: "InvalidArgument"
  language: en
  algorithm: rank
  style: best
  include: [
    {
      entity: "Musician",
      fields: [
        { name: "ok" },
        { name: "bio" },
      ]
    }
  ]
)
@fulltext(
  name: "IncludeMustBeList"
  language: en
  algorithm: rank
  include:
  {
    entity: "Musician",
    fields: [
      { name: "ok" },
      { name: "bio" },
    ]
  }
)
@fulltext(
  name: "MissingLanguageAlgorithmInclude"
)
@fulltext(
  name: "IncludeItemNotObject"
  language: en
  algorithm: rank
  include: [
    "Musician",
  ]
)
@fulltext(
  name: "IncludeMissingEntityField"
  language: en
  algorithm: rank
  include: [
    {
      fields: [
        { name: "ok" },
        { name: "bio" },
      ]
    }
  ]
)
@fulltext(
  name: "InvalidIncludeArgumentOther"
  language: en
  algorithm: rank
  include: [
    {
      other: "wrong"
      fields: [
        { name: "ok" },
        { name: "bio" },
      ],
    }
  ]
)
@fulltext(
  name: "IncludeFieldsMustBeList"
  language: en
  algorithm: rank
  include: [
    {
      entity: "Musician",
      fields: "instrument",
    }
  ]
)
@fulltext(
  language: en
  algorithm: rank
  include: [
    {
      entity: "Musician",
      fields: [
        { name: "ok" },
        { name: "bio" },
      ]
    }
  ]
)
type A @entity @fulltext(
  name: "FulltextOnWrongType"
  language: en
  algorithm: rank
  include: [
    {
      entity: "Musician",
      fields: [
        { name: "9" },
        { name: "bio" },
      ]
    }
  ]
) {
  id: ID!
}

type B @entity {
  id: ID!
  foo: String!
}
